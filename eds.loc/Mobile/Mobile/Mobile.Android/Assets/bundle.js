!function(t){var e={};function n(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return t[i].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(i,a,function(e){return t[e]}.bind(null,a));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var i=class{constructor(){this.index=0,this.register=[]}add(t,e){this.register[this.index]={date_time:Date(),err_obj:t,message:e},this.index++}write(){let t=1;for(let e of this.register)console.error(`\nОшибка № ${t}\nВремя ошибки: ${e.date_time}\nОбъект ошибки: ${e.err_obj.name}\nСообщение: ${e.message}\n            `),t++}};var a=class{constructor(){this._element=void 0}create(t,e,...n){const i=document.createElement(t);return Object.keys(e).forEach(t=>{"function"!=typeof e[t][0]&&"function"!=typeof e[t]||i.addEventListener(t,function(){"function"==typeof e[t]?e[t]():e[t][0](...e[t][1])}),i[t]=e[t]}),n.forEach(t=>{"string"==typeof t&&(t=document.createTextNode(t)),i.appendChild(t)}),i}get element(){return this._element}};const s=()=>M.open("PAGE_TASK_LIST"),r=()=>M.open("PAGE_CUSTOMER_LIST"),l=()=>M.open("PAGE_EQUIPMENT_LIST"),o=()=>M.open("PAGE_START"),_=()=>alert("exit");function c(){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,t=>(t^crypto.getRandomValues(new Uint8Array(1))[0]&15>>t/4).toString(16))}var h=class extends a{constructor(){super()}draw(){this.page_task_list=this.create("li",{click:s},"Список задач"),this.page_customer_list=this.create("li",{click:r},"Список заказчиков"),this.page_equipment_list=this.create("li",{click:l},"Список оборудования"),this.page_main=this.create("li",{click:o},"Главная страница"),this.page_exit=this.create("li",{click:_},"Выйти"),this.u_list=this.create("ul",{},this.page_task_list,this.page_customer_list,this.page_equipment_list,this.page_main,this.page_exit),this._element=this.create("nav",{style:"width: 20px; height: 20px; background-color:red"},this.u_list)}};var N=class extends a{constructor(){super(),this.search_text="",this.search="",this.visible=""}draw(){this.search_panel=this.create("input",{type:"search",placeholder:"search"});let t=this.create("button",{},"close");this._element=this.create("div",{},this.search_panel,t)}};var u=class extends a{constructor(){super(),this._caption=void 0,this.captionElem=void 0,this._back_button=!0,this.backElement=void 0,this.sync_progress="0",this.search_panel=void 0}draw(){let t=new h,e=new N;this.captionElem=this.create("h1",{},"a"),this._back_button&&(this.backElement=this.create("button",{},"back")),t.draw(),e.draw(),this.search_panel=e.element,this.container=this.create("div",{},t.element,this.sync_progress,this.captionElem,this.backElement),this._element=this.create("header",{},this.container,this.search_panel)}set back_button(t){this._back_button?(this.backElement.addEventListener("click",t),this.backElement.style.visibility="visible"):this.backElement.style.visibility="hidden"}refreshBB(){this.container.removeChild(this.backElement),this.backElement=this.create("button",{},"back"),this.container.appendChild(this.backElement)}set caption(t){this._caption=t,void 0!==this._element&&void 0!==this._caption&&(this.captionElem.textContent=this._caption)}};var T=class extends a{constructor(t){super(),void 0!==t&&(this.data=t),this.caption=void 0,this.back_button=void 0,this.search_panel=void 0,this._data={},this.position=0,this.dad=document.querySelector("main"),this.controls={}}draw(){Object.keys(this._data).forEach(t=>{this.dad.appendChild(this._data[t].element)})}add(t){this._data[this.position]=t,this.position++}addAll(t){Object.keys(t).forEach(e=>{this._data[e]=t[e],this._data[e].draw()})}insert(t,e){for(let t=this.position-1;t>e;t--)this._data[t+1]=this._data[t];this._data[e]=t}clear(){for(;this.dad.childNodes[0];)this.dad.removeChild(this.dad.childNodes[0]);this._data={},this.controls={}}};let L={time_update:"0",user_level:0,is_logged:!1,private_key:"",GUID_device:"",mail:"",password:"",encryption_seed:"",live_search_char_num:3,live_search:!1,font_name:"Roboto Regular, Verdana",font_size_label:"11pt",max_data_records:60,sync_record_count:20,sync_delay:180,max_error_records:200};var E=class{constructor(){this._status="IDLE",this._last_run=Date(),console.log("Last run: "+this._last_run)}async run(){await this.update_tables(),setTimeout(await this.update_tables(),18e3)}async update_tables(){let t=await this.sync_server_transact();console.log(t),0===t.record_count?console.log("Нет данных для синхронизации"):(alasql("INSERT INTO server_transact VALUES ?",[t.records]),this.update_tables())}stop(){this._status="STOP"}async sync_server_transact(){return await this.transact(async()=>{let t=alasql("SELECT TOP 1 GUID FROM server_transact ORDER BY DESC"),e=`mail=${L.mail}&md_encryption_seed=${L.encryption_seed}&last_GUID=${t}&count=30`;return await fetch("/get_sync_data.php?"+e)})}async get_server_record(){return await this.transact(async()=>{let t=JSON.stringify(alasql("SELECT GUID FROM client_transact")),e=`mail=${L.mail}&md_encryption_seed=${L.encryption_seed}&count=50&GUID_records=${t}`;return await fetch("/get_sync_data.php",{method:"POST",body:e})})}send_client_record(){this.transact()}get status(){return this._status}async transact(t){this._status="RUN";let e=(await t()).json();return console.log(this.status),this._last_run=Date(),this._status="IDLE",e}};var p=class{constructor(){this.page_list=[],this.action="PAGE_START",this.sync=new E,console.log("Sync status: "+this.sync.status)}start_sync(){this.sync.run()}registryPage(t,e){let n=new T;n.caption=t.caption,n.back_button=t.back_button,this.page_list[t.page_name]={page:n,init:e,name:t.page_name}}open(t,e){let n,i=this.page_list[this.action].name;"PAGE_START"===t&&Y.refreshBB(),t!==i&&(n=(()=>M.open(i))),this.page_list[this.action].page.clear(),this.action=t;let a=this.page_list[this.action].page;void 0!==a?("PAGE_SETTING_PRIVATE_KEY"!==t&&"PAGE_LOGIN"!==t&&(Y.caption=a.caption,Y._back_button=a.back_button,Y.back_button=n),this.page_list[this.action].init(a,e),a.draw()):alert("Страница не создана!")}isOnline(){}};var U=class extends a{constructor(){super()}draw(){let t=this.create("div",{},"Запустить"),e=this.create("div",{},"Отменить"),n=this.create("div",{},"Завершить");this._element=this.create("div",{},"Таймер",t,e,n)}show(){this._element.style.visibility="visible"}hide(){this._element.style.visibility="hidden"}start(){}stop(){}pause(){}};var m=class extends a{constructor(){super()}draw(){let t=new U;t.draw(),this._element=this.create("footer",{},t.element)}};var I=class extends a{constructor(t,e){super(),this._isBold="font-weight: normal",this._text=t,e&&(this._isBold="font-weight: bold")}draw(){this._element=this.create("label",{style:this._isBold},this._text)}get value(){return this._text}set value(t){this._text=t,this._element.textContent=this._text}};var O=class extends a{constructor(t,e,n,...i){super(),this._caption=t,this._isVisible="visible",this.onclick=n,e||(this._isVisible="hidden"),this._element=void 0,this.arg=i}draw(){this._element=this.create("button",{style:"visibility: "+this._isVisible,click:[this.onclick,this.arg]},this._caption)}set caption(t){this._caption=t,void 0!==this._element&&(this._element.textContent=this._caption)}get caption(){return this._caption}};class A extends a{constructor(){super(),this._data={},this.position=0,this._controls={}}draw(){this._element=this.create("div",{})}add(t){this._controls[this.position]=t,this.position++}addAll(t){Object.keys(t).forEach(e=>{this._data[e]=t[e],this._data[e].draw(),this._data[e]=this._data[e].element})}draw2(){Object.keys(this._data).forEach(t=>{this.element.appendChild(this._data[t])})}insert(t,e){for(let t=this.position-1;t>e;t--)this._controls[t+1]=this._controls[t];this._controls[e]=t}show(){this._element.style.display="grid"}hide(){this._element.style.display="none"}}var b=class extends I{constructor(t,e,n){super(t,e),this._guid="",this._data=n,this._char_type="TYPE_TEXT",this._field_state=!1,this.placeholder=""}draw(){let t;t=this._field_state?"p":"input",this._element=this.create(t,{style:this._isBold,className:"data_label"},this._text),"input"===t&&(this._element.value=this._text,this._element.placeholder=this.placeholder)}};class D extends a{constructor(t){super(),this._table_click=t.click,this._table_name=t.table_name,this._query=t.query,this._prototype=t.prototype,this._max_count=50,this._table_items=[],this._id=0,this.sel=this.select(),this.parse_data(),this.add_popup()}add_popup(){this.popup=new A,this.c=[];for(let t=0,e=0;e<this._prototype.length;t++,e++)this.c[t]=new I(this._prototype[e]),t++,this.c[t]=new b("",!1);console.log(this.c),this.popup.draw(),this.popup.addAll(this.c),this.popup.draw2(),this.popup.hide()}parse_data(){let t=this.sel;for(let e=0;e<t.length;e++){let n=g(this._prototype,t[e]);this.add_item(void 0,n.elems,n.param,this._table_click)}}select(){let t=alasql(this._query.select);return console.log(t),t}draw(){let t=new O("Добавить",!0,f,this.popup);t.draw(),this._element=this.create("div",{style:"display:grid",className:"data_table"},t.element,this.popup.element,...this._table_items);let e={cancel:new O("Отмена",!0,S,this.popup),enter:new O("Сохранить",!0,this.save,this)};this.popup.addAll(e),this.popup.draw2()}save(t){let e=t.popup.element.querySelectorAll("input"),n=[];for(let t=0;t<e.length;t++)n[t]=e[t].value;let i=g(t._prototype,n,"A");t.add_item(t.element,i.elems,i.param,t._table_click,t._table_name);let a=0,s=0,r=[];("GUID"in r||void 0===r.GUID)&&(r[a]=Date.now(),r[++a]=!1,r[++a]=c(),a++);for(s=a;a<n.length+s;a++)r[a]=n[a-s];let l=function(){let e=localStorage["lsdb."+t._table_name],n=JSON.parse(e).columns,i=[];for(let t=0;t<n.length;t++)i[t]=n[t].columnid;return i}(),o={};for(let t=0;t<l.length;t++)o[l[t]]=r[t];alasql(`INSERT INTO ${t._table_name} VALUES ?`,[o]);let _=alasql(`SELECT * FROM ${t._table_name} WHERE GUID = '${o.GUID}'`);console.log("Данные записаны: "),console.log(_),S(t.popup)}add_item(t,e,n,i){let a=new G(e,n);a.draw(),a.element.onclick=(()=>{i(a.GUID),console.log(a)}),console.log("Кнопка добавлена"),void 0===t?(this._table_items[this._id]=a.element,this._id++):t.appendChild(a.element)}}class G extends a{constructor(t,e){super(),this._elems=t,this.GUID=void 0!==e?e.GUID:c()}draw(){this._element=this.create("div",{style:"display:grid"},...this._elems)}}function S(t){let e=t.element.querySelectorAll("input");for(let t=0;t<e.length;t++)e[t].value="";t.hide()}function f(t){t.show()}function g(t,e,n){let i=void 0;void 0===n&&(i={GUID:e.GUID,is_delete:e.is_delete,time_update:e.time_update},delete e.GUID,delete e.is_delete,delete e.time_update);let a=[],s=0,r=0;return Object.keys(e).forEach(n=>{a[s]=new I(t[r]),a[s].draw(),a[s]=a[s].element,r++,a[++s]=new I(e[n]),a[s].draw(),a[s]=a[s].element,s++}),{elems:a,param:i}}var R=class extends a{constructor(t,e,n){super(),this._isEdit=e,this._text=t,this._element=void 0,this._placeholder=""}draw(){this._element=this.create("textarea",{},this._text),this._element.disabled=!this._isEdit,this._element.placeholder=this._placeholder}};function y(t,e){console.log(t.value),console.log(e.value),v(t.value,w,e.value)}function v(t,e,n){!async function(t,e,n,i){let a=new XMLHttpRequest;a.open(t,e+"?"+n),a.send(),await async function(){for(;a.readyState<4;)console.log(a.readyState)}(),async function(){if(4===a.readyState&&200===a.status){console.log(a.responseText);let t=a.responseText,e=JSON.parse(t);if(console.log(e),""!==e)return e;console.log("Ошибка в запросе")}}()}("GET","authentic.php","mail="+encodeURIComponent(function(t){let e,n,i,a,s,r,l,o,_="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",c=0,d="";do{e=t.charCodeAt(c++),n=t.charCodeAt(c++),i=t.charCodeAt(c++),s=(o=e<<16|n<<8|i)>>12&63,r=o>>6&63,l=63&o,d+=_.charAt(a=o>>18&63)+_.charAt(s)+_.charAt(r)+_.charAt(l)}while(c<t.length);switch(t.length%3){case 1:d=d.slice(0,-2)+"==";break;case 2:d=d.slice(0,-1)+"="}return d}(t)))}function w(t,e){console.log("pk = "+t.public_key),console.log("prk = "+e);const n=function(t,e){let n="abcdef",i="";t=t.toLowerCase(),e=e.toLowerCase(),console.log(e),console.log(t);for(let s=0;s<t.length;s++){let r=a(t[s])-a(e[s]);i+=(r=(r+16)%16)>9?n[r-10]:r}return i;function a(t){if(-1!==n.indexOf(t)){let e=n.indexOf(t);return 10+e}return+t}}(t.public_key,e);console.log(n)}function C(t,e){console.log(t.value),console.log(e.value),v(t.value,0,e.value)}class P extends I{constructor(t,e,n,i){super(n,i),this._is_visible="visible",t||(this._is_visible="hidden"),this._is_checked=!1,e&&(this._is_checked=!0),this.data=[]}draw(){let t=this.create("input",{type:"checkbox",style:"visibility: "+this._is_visible});t.checked=this._is_checked,void 0===this._text?this._element=t:this._element=this.create("label",{style:this._isBold},this._text,t)}onchange(){}}class k extends a{constructor(t,e,n,i,a){super(),this._data=a,this._GUID=t,this._query=e,this._table_name=n,this._prototype=i,this._max_count=50,this._id=0}draw(){this.c=[];let t=this.select();for(let e=0;e<t.length;e++){let n=q(this._prototype,t[e],void 0,this.create);this.c=n}this._element=this.create("div",{style:"display:grid",className:"redact_table"},...this.c);let e=new O("Сохранить",!0,this.save,this);e.draw(),this._element.appendChild(e.element),console.log(this.c)}save(t){let e=t.element.querySelectorAll("input"),n={};n.time_update=Date.now(),n.is_delete=!1,n.GUID=t._GUID;for(let i=0;i<e.length;i++)n[t._data[i]]=e[i].value;console.log(n),function(t,e){alasql(`DELETE FROM ${t} WHERE GUID = '${e.GUID}'`),alasql(`INSERT INTO ${t} VALUES ?`,[e])}(t._table_name,n)}select(){console.log("Current database:",alasql.useid);let t=alasql(this._query);return console.log(t),t}}function q(t,e,n,i){let a=void 0;void 0===n&&(a={GUID:e.GUID,is_delete:e.is_delete,time_update:e.time_update},delete e.GUID,delete e.is_delete,delete e.time_update);let s=[],r=0,l=0,o=[];return Object.keys(e).forEach(n=>{s[r]=new I(t[l]),s[r].draw(),s[r]=s[r].element,s[++r]=new b(e[n]),s[r].draw(),s[r]=s[r].element,o[l]=i("div",{},s[r-1],s[r]),r++,l++}),o}class F extends a{constructor(){super()}add(){}remove(){}rows(){}}class B extends a{constructor(t){super(),this._placeholder=t.placeholder,this._name=t.name}draw(){let t=new t(this._name,!0),e=new R(null,!1);e._placeholder=this._placeholder,this.edit_button=new O("Изменить",!0,(t,e)=>{"Изменить"===e.edit_button.caption?(t._element.disabled=!1,e.edit_button.caption="Сохранить"):"Сохранить"===e.edit_button.caption&&(t._element.disabled=!0,e.edit_button.caption="Изменить")},e,this),this._element=this.create("div",{},t.element,this.edit_button.element,e)}}n.d(e,"error_log",function(){return x}),n.d(e,"application",function(){return M}),n.d(e,"topPanel",function(){return Y}),n.d(e,"open_page_start",function(){return K}),n.d(e,"open_page_login",function(){return X});let x=new i,M=new p;alasql("CREATE localStorage DATABASE IF NOT EXISTS lsdb"),alasql("ATTACH localStorage DATABASE lsdb"),alasql("USE lsdb"),M.registryPage({page_name:"PAGE_SETTING_PRIVATE_KEY",caption:"NONE",back_button:!1},function(t){let e={input_label:new I("Введите секретный ключ и почту",!1),input_mail:new b("asd@mail.com",!1),input_key:new R("D64C691A08364D51A7786D89E2E21605",!0,0)};t.addAll(e);let n={cancel:new O("Закрыть",!0,_),enter:new O("Ок",!0,y,t._data.input_mail.element,t._data.input_key.element)};e.input_mail.placeholder="Почта (asd@mail.com)",e.input_key.placeholder="Секретный секретик введите сюда \n(D64C691A08364D51A7786D89E2E21605)\nP.S. скопировать через код",t.addAll(n)}),M.registryPage({page_name:"PAGE_START",caption:"Стартовая страница",back_button:!1},function(t){let e={PAGE_CUSTOMER_LIST:new O("Список заказчиков",!0,r),PAGE_EQUIPMENT:new O("Список оборудования",!0,l),PAGE_TASK_LIST:new O("Мои задачи",!0,s),label:new I("Задачи по направлениям",!0)};t.addAll(e)}),M.registryPage({page_name:"PAGE_CUSTOMER_LIST",caption:"Список объектов",back_button:!0,search:["tab_customer.title","tab_customer.address","tab_customer.town"]},function(t,e){let n={input:new R("Список всех объектов. Нажмите на нужный, чтоюы посмотреть подробности... Или добавьте новый",!1),dt:new D({name:"Список объектов",button:"Добавить объект",prototype:["название учреждения","город"],query:{select:["SELECT GUID, title, town FROM tab_customer"]},click:t=>M.open("PAGE_CUSTOMER_DESCRIPTION",t)})};t.addAll(n)}),M.registryPage({page_name:"PAGE_EQUIPMENT_LIST",caption:"Список оборудования",back_button:!0},function(t){let e={input:new R("Список всех объектов. Нажмите на нужный, чтобы посмотреть подробности... Или добавьте новый",!1)};t.addAll(e);let n=new D("SELECT GUID, title, town FROM tab_equipment","tab_equipment",["тип","название","время"],"PAGE_EQUIPMENT_DESCRIPTION");t.addAll({dt:n})}),M.registryPage({page_name:"PAGE_TASK_LIST",caption:"Список объектов",back_button:!0},function(t,e){let n={input:new R("Выберите задачу из списка ниже или создайте новую. Для быстрого поиска введите часть слова в строку поиска",!1),checkbox1:new P(!0,!1,"Только просроченные"),checkbox2:new P(!0,!0,"Только мои задачи"),checkbox3:new P(!0,!1,"Только на сегодня"),dt:new D({table_name:"tab_customer",prototype:["название учреждения","город","адрес"],query:["SELECT GUID, title, town FROM "+this.table_name],click:"PAGE_CUSTOMER_DESCRIPTION"})};t.addAll(n)}),M.registryPage({page_name:"PAGE_LOGIN",caption:"Вход",back_button:!1},function(t){let e={label:new I("Войдите",!0),input_mail:new b("asd@mail.com",!1),input_pass:new b("asd",!0,0)};t.addAll(e);let n={cancel:new O("Закрыть",!0,_),enter:new O("Ок",!0,C,t._data.input_mail.element,t._data.input_pass.element)};t.addAll(n)}),M.registryPage({page_name:"PAGE_CUSTOMER_DESCRIPTION",caption:"Описание заказчика",back_button:!0,search:!1},function(t,e){let n={rt:new k,button:new O("Список оборудования",!0,()=>M.open("PAGE_CUSTOMER_EQUIPMENT",e)),button2:new O("Список задач",!0,()=>M.open("PAGE_TASK_LIST",e)),dt:new D({name:"Действующие контракты",button:"Добавить",query:{select:[`SELECT * FROM tab_contract, tab_customer WHERE tab_contract.GUID_customer = ${e.GUID}`]},click:t=>M.open("PAGE_CUSTOMER_CONTRACT_EQUIPMENT",t)})};t.addAll(n)}),M.registryPage({page_name:"PAGE_EQUIPMENT_DESCRIPTION",caption:"Список объектов",back_button:!0},function(t,e){new k({prototype:["Название аппарата","Модель аппарата","Категория оборудования"],query:{select:"",insert:""}}),new I("Составные узлы аппарата и норму времени на их обслуживание смотри в таблице ниже. Чтобы посмотреть список работ, нажмите на узле"),new D({prototype:[]}),console.log(e);let n=new k(e,`SELECT * FROM tab_equipment WHERE GUID = '${e}'`,"tab_customer",["тип","название","время"],d);t.addAll({rt:n})}),M.registryPage({page_name:"PAGE_EQUIPMENT_NODE_DESCRIPTION",caption:"Описание узла",back_button:!0},function(t,e){let n={label:new I("Задача на диагностику",!0),diag:new F({name:"Задача на диагностику аппарата",prototype:["Категория","Название узла"],query:{select:"SELECT GUID, title, town FROM "+this.table_name}}),dt2:new D({name:"Признаки отказа",button:"Добавить признак",click:"PAGE_POPUP_TASK_DIAG_FAILURE",prototype:["Аппарат наименование, модель","Заводской номер","Инвент. номер","Расположение"],query:{select:"\n                        SELECT tab_equipment_node_group.title+' '+tab_equipment_node.title AS equipment,\n                        tab_equipment_failure_sign.description\n                        FROM\n                        tab_equipment_node_group, tab_equipment_node, tab_equipment_failure_sign,\n                        tab_task_equipment, tab_customer_equipment\n                        WHERE\n                        tab_equipment_failure_sign.GUID_equipment_node=tab_equipment_node.GUID AND\n                            tab_equipment_node_group.GUID=tab_equipment_node.GUID_group AND\n                            tab_equipment_failure_sign.GUID_task_equipment=?"}}),dt3:new D({name:"Задания",button:"Добавить задание для проверки",prototype:["Аппарат наименование, модель","Заводской номер","Инвент. номер","Расположение"],click:()=>M.open("PAGE_CUSTOMER_DESCRIPTION"),query:{select:"\n                        SELECT tab_equipment_failure_target.time_insert, tab_user.uname,\n                        tab_equipment_failure_target.description,\n                        calc_failure_comment(tab_equipment_failure_target.GUID_target),\n                        true AS check_box_visible,\n                        tab_equipment_failure_target AS check_box\n                        FROM\n                        tab_equipment_failure_target, tab_user, tab_equipment_failure_sign\n                        WHERE\n                        tab_equipment_failure_target_comment.GUID_target=tab_equipment_failure_target.GUID\n                        AND\n                        tab_equipment_failure_target.GUID_emloyee=tab_user.GUID AND\n                        tab_equipment_failure_target.GUID_task_equipment=?"}}),label2:new I('Мы нашли ещё n случаев неисправности "name"'),dm:new B({name:"Заполни заключение, когда выяснишь причину отказа"})};t.addAll(n)}),alasql("CREATE TABLE IF NOT EXISTS `server_transact` (\n  `ID` int(11) NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `table_name` char(25) NOT NULL,\n  `query_type` char(25) NOT NULL,\n  `GUID_record` char(36) NOT NULL,\n  `GUID_user` char(36) NOT NULL,\n  `ID_division` char(20) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_additional_job` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_task_equipment` char(36) NOT NULL,\n  `caption` text NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_additional_job_act` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_additional_job` char(36) NOT NULL,\n  `GUID_employee` char(36) NOT NULL,\n  `time_begin` datetime NOT NULL,\n  `time_duration` float NOT NULL,\n  `is_finish` tinyint(1) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_contract` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_customer` char(36) NOT NULL,\n  `num` char(1) NOT NULL,\n  `date_begin` datetime NOT NULL,\n  `date_end` datetime NOT NULL,\n  `description` text NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_contract_division` (\n  `ID_division` char(20) NOT NULL,\n  `GUID_contract` char(36) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_contract_equipment` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_customer_equipment` char(36) NOT NULL,\n  `GUID_contract` char(36) NOT NULL,\n  `ID_frequency` int(11) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_customer` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `title` char(50) NOT NULL,\n  `town` char(50) NOT NULL,\n  `address` char(50) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_customer_equipment` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_customer` char(36) NOT NULL,\n  `GUID_equipment` char(36) NOT NULL,\n  `serial` char(50) NOT NULL,\n  `invent` char(50) NOT NULL,\n  `date_create` char(20) NOT NULL,\n  `date_input` char(20) NOT NULL,\n  `destination` char(50) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_division` (\n  `ID` char(20) NOT NULL,\n  `title` char(20) NOT NULL,\n  PRIMARY KEY (`ID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_encryption` (\n  `encryption_seed` char(32) NOT NULL,\n  `GUID_user` char(36) NOT NULL,\n  `validity` datetime NOT NULL,\n  PRIMARY KEY (`encryption_seed`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_equipment` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_category` char(36) NOT NULL,\n  `GUID_title` char(36) NOT NULL,\n  `model` char(255) NOT NULL,\n  `service_time` float NOT NULL,\n  `ID_frequency` int(11) NOT NULL,\n  `GUID_manufacturer` char(36) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_equipment_category` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `sort_id` int(11) NOT NULL,\n  `title` char(50) NOT NULL,\n  `ID_division` char(20) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_equipment_failure_sign` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_employee` char(36) NOT NULL,\n  `GUID_equipment_node` char(36) NOT NULL,\n  `GUID_task_equipment` char(36) NOT NULL,\n  `description` text NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_equipment_failure_target` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `time_insert` datetime NOT NULL,\n  `GUID_task_equipment` char(36) NOT NULL,\n  `GUID_employee` char(36) NOT NULL,\n  `description` text NOT NULL,\n  `is_cheked` tinyint(1) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_equipment_failure_target_comment` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_employee` char(36) NOT NULL,\n  `GUID_target` char(36) NOT NULL,\n  `description` text NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_equipment_node` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_group` char(36) NOT NULL,\n  `title` char(50) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_equipment_node_group` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `title` char(50) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_equipment_node_join` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_equipment` char(36) NOT NULL,\n  `GUID_node` char(36) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_equipment_title` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `title` char(50) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_manufacturer` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `title` char(50) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_service_frequency` (\n  `ID` int(11) NOT NULL,\n  `frequency` int(11) NOT NULL,\n  `title` char(50) NOT NULL,\n  PRIMARY KEY (`ID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_service_job` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_equipment_node` char(36) NOT NULL,\n  `ID_frequency` int(11) NOT NULL,\n  `service_time` float NOT NULL,\n  `service_job` text NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_service_job_act` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_service_job` char(36) NOT NULL,\n  `GUID_employee` char(36) NOT NULL,\n  `GUID_task_equipment` char(36) NOT NULL,\n  `time_begin` datetime NOT NULL,\n  `time_duration` float NOT NULL,\n  `is_finish` tinyint(1) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_task` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `task_type` char(10) NOT NULL,\n  `task_state` char(10) NOT NULL,\n  `GUID_customer` char(36) NOT NULL,\n  `GUID_contract` char(36) NOT NULL,\n  `date_create` datetime NOT NULL,\n  `date_begin` datetime NOT NULL,\n  `date_deadline` datetime NOT NULL,\n  `time_duration` float NOT NULL,\n  `description` text NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_task_employee` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_user` char(36) NOT NULL,\n  `GUID_task` char(36) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_task_equipment` (\n  `is_delete` int(11) NOT NULL,\n  `time_update` datetime NOT NULL,\n  `GUID` char(36) NOT NULL,\n  `GUID_customer_equipment` char(36) NOT NULL,\n  `GUID_task` char(36) NOT NULL,\n  `description` text NOT NULL,\n  `is_finish` tinyint(1) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_task_state` (\n  `ID` char(10) NOT NULL,\n  `title` char(50) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_task_type` (\n  `ID` char(10) NOT NULL,\n  `title` char(50) NOT NULL,\n  UNIQUE KEY `ID` (`ID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_user` (\n  `GUID` char(36) NOT NULL,\n  `ID_division` char(20) NOT NULL,\n  `private_key` char(255) NOT NULL,\n  `uname` char(50) NOT NULL,\n  `mail` char(50) NOT NULL,\n  `level` int(11) NOT NULL,\n  `is_enable` int(11) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_user_client` (\n  `GUID` char(36) NOT NULL,\n  `ID_division` char(20) NOT NULL,\n  `uname` char(50) NOT NULL,\n  `mail` char(50) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE IF NOT EXISTS `tab_user_server` (\n  `GUID` char(36) NOT NULL,\n  `ID_division` char(20) NOT NULL,\n  `private_key` char(255) NOT NULL,\n  `uname` char(50) NOT NULL,\n  `mail` char(50) NOT NULL,\n  `level` int(11) NOT NULL,\n  `is_enable` int(11) NOT NULL,\n  PRIMARY KEY (`GUID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n");let Y=new u,H=new m;function K(){!function(t){Y.draw(),document.body.insertBefore(Y.element,t),H.draw(),document.body.appendChild(H.element)}(document.querySelector("main")),M.open("PAGE_START")}function X(){(void 0===(L=JSON.parse(localStorage.system)).password||""===L.password&&void 0===L.mail||""===L.mail)&&M.open("PAGE_LOGIN")}K()}]);